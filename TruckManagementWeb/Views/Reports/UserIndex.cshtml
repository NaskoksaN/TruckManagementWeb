@{
    ViewBag.Title = $"For {DateTime.Now.Year}  have";
}

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
</head>

<div class="text-center">
    <h4>@ViewBag.Title</h4>
    <div class="container">
        <div class="row">
            <div class="col-md-4 offset-md-4 text-center">
                <h2>Number of Trucks</h2>
                <div class="counter truck-counter" data-count="100">0</div>
                <h2>Kilometers Driven</h2>
                <div class="counter km-counter" data-count="5000">0</div>
                <h2>Total Orders</h2>
                <div class="counter order-counter" data-count="200">0</div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            function animateCounter(element, targetCount, duration) {
                let count = 0;
                const increment = Math.ceil(targetCount / duration);
                const timer = setInterval(() => {
                    count += increment;
                    element.textContent = count;
                    if (count >= targetCount) {
                        clearInterval(timer);
                        element.textContent = targetCount;
                    }
                }, 1);
            }

            document.addEventListener('DOMContentLoaded', function () {
                const truckCounterElement = document.querySelector('.truck-counter');
                const kmCounterElement = document.querySelector('.km-counter');
                const orderCounterElement = document.querySelector('.order-counter');

                const truckTargetCount = parseInt(truckCounterElement.getAttribute('data-count'));
                const kmTargetCount = parseInt(kmCounterElement.getAttribute('data-count'));
                const orderTargetCount = parseInt(orderCounterElement.getAttribute('data-count'));

                const animationDuration = 1000;

                animateCounter(truckCounterElement, truckTargetCount, animationDuration);
                setTimeout(() => animateCounter(kmCounterElement, kmTargetCount, animationDuration), 1000); // Delay for sequential animation
                setTimeout(() => animateCounter(orderCounterElement, orderTargetCount, animationDuration), 2000); // Delay for sequential animation
            });
        </script>
    }
</div>

